#!/bin/bash

# DevA - Web Development Environment
# Created by Miguel Nunes
# https://github.com/mignz/DevA

# ------------------------------------------------------------------------------

# Text colors

function red {
    echo -e "\\033[91m$1\\033[39m"
}

function green {
    echo -e "\\033[92m$1\\033[39m"
}

# ------------------------------------------------------------------------------

# Detect OS

case "$(uname -s)" in
    Linux*) os=linux;;
    Darwin*) os=macos;;
    *) red "Invalid operating system! Only macOS and Ubuntu supported."; exit 1;;
esac

# ------------------------------------------------------------------------------

# Paths & OS specific configuration

if [ "$os" == "macos" ]; then
    path_php=/usr/local/etc/php/7.2
else
    path_php=/etc/php/7.2/fpm
fi

# ------------------------------------------------------------------------------

# Preflight Checks

if [ ! "$EUID" -ne 0 ]; then
    red "Plese do NOT run as admin!"
    exit 1
fi

if [ ! -f /usr/local/etc/nginx/deva/deva.conf ] && [ ! -f /etc/nginx/deva/deva.conf ]; then
    red "DevA not installed!"
    exit 1
fi

# ------------------------------------------------------------------------------

# Helpers

function currentVersion {
    grep "this_update=" /usr/local/DevA/deva | cut -d "=" -f 2
}

function get {
    data=$(curl -SsL "https://raw.githubusercontent.com/mignz/DevA/master/$1")
    if [ $# -eq 1 ]; then
        echo "$data"
    else
        echo "Fetching $1 from Git repository ..."
        echo "$data" | sudo tee "$2"
    fi
}

function perms {
    if [ "$os" == "macos" ]; then
        sudo chown -R "$(whoami)":admin /usr/local/DevA
        sudo chown -R "$(whoami)":admin /usr/local/etc/nginx
    else
        sudo chown -R "$(whoami)":"$(whoami)" /usr/local/DevA
        sudo chown -R root:root /etc/nginx
    fi
}

function updateDevaScript {
    get "deva" "/usr/local/DevA/deva"
}

function replace {
    if [ $os == "macos" ]; then
        sudo sed -i '' "s@$1@$2@g" "$3"
    else
        sudo sed -i "s@$1@$2@g" "$3"
    fi
}

profile_newline=0
function profile {
    path_profile=~/.bash_profile
    [ $os == "linux" ] && path_profile=~/.profile
    if ! grep -q "$1" $path_profile; then
        if [[ -s $path_profile ]] && [ $profile_newline -eq 0 ]; then
            echo "" >> $path_profile
        fi
        echo -e "$2" >> $path_profile
        profile_newline=1
    fi
}

# ------------------------------------------------------------------------------

# Updates

function __1 {
    updateDevaScript &
    get "conf/deva_php-fpm.conf" "/usr/local/etc/php/7.1/deva_php-fpm.conf" &
    wait
    echo "include=/usr/local/etc/php/7.1/deva_php-fpm.conf" > /usr/local/etc/php/7.1/php-fpm.conf
    brew services restart php71
    brew services start mongodb
    /usr/local/bin/mongo admin --eval "db.createUser({user:'root',pwd:'root',roles:['root']})"
    echo -e "security:\\n  authorization: enabled" >> "/usr/local/etc/mongod.conf"
    brew services stop mongodb
}

function __2 {
    updateDevaScript &
    get "conf/deva_404.html" "/usr/local/etc/nginx/deva_404.html" &
    get "conf/deva_phalcon.conf" "/usr/local/etc/nginx/deva_phalcon.conf" &
    get "conf/deva_php.conf" "/usr/local/etc/nginx/deva_php.conf" &
    wait
    sudo brew services restart nginx
}

function __3 {
    updateDevaScript
}

function __4 {
    updateDevaScript
    replace 'allow_url_fopen = On' 'allow_url_fopen = Off' /usr/local/etc/php/7.1/php.ini
    brew install pandoc
}

function __5 {
    updateDevaScript &
    get "conf/deva.conf" "/usr/local/etc/nginx/deva.conf" &
    get "conf/deva_common.conf" "/usr/local/etc/nginx/deva_common.conf" &
    get "conf/deva_html.conf" "/usr/local/etc/nginx/deva_html.conf" &
    get "conf/deva_phalcon.conf" "/usr/local/etc/nginx/deva_phalcon.conf" &
    get "conf/deva_php.conf" "/usr/local/etc/nginx/deva_php.conf" &
    get "conf/deva_404.html" "/usr/local/etc/nginx/deva_404.html" &
    get "conf/deva_php-fpm.conf" "/usr/local/etc/php/7.1/deva_php-fpm.conf" &
    wait
    replace "USER_PLACEHOLDER" "$(whoami)" /usr/local/etc/nginx/deva.conf
    if [ -f /usr/local/etc/nginx/servers/___localhost.conf ]; then
        get "conf/localhost.conf" "/usr/local/etc/nginx/servers/___localhost.conf"
        replace "WWWDIR_PLACEHOLDER" "$(cat /usr/local/etc/nginx/deva_www)" /usr/local/etc/nginx/servers/___localhost.conf
    else
        get "conf/localhost.conf" "/usr/local/etc/nginx/servers/localhost.conf"
        replace "WWWDIR_PLACEHOLDER" "$(cat /usr/local/etc/nginx/deva_www)" /usr/local/etc/nginx/servers/localhost.conf
    fi
    replace 'disable_functions =' 'disable_functions = exec,shell_exec,pcntl_exec,passthru,system,proc_open,proc_close,proc_terminate,proc_nice,popen,pclose,curl_multi_exec,parse_ini_file,ini_get_all,ini_restore,show_source,eval,assert,dl,apache_note,apache_setenv,closelog,debugger_off,debugger_on,define_syslog_variables,openlog,proc_get_status,syslog,url_exec,stream_select,inject_code,phpAds_remoteInfo,phpAds_XmlRpc,phpAds_xmlrpcDecode,phpAds_xmlrpcEncode,posix_kill,posix_mkfifo,posix_setpgid,posix_setsid,posix_setuid,posix_uname,xmlrpc_entity_decode,pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_getpriority,pcntl_setpriority,opcache_get_status' /usr/local/etc/php/7.1/php.ini
    rm -f /usr/local/bin/deva
}

function __6 {
    updateDevaScript
    get "conf/deva_404.html" "/usr/local/etc/nginx/deva_404.html"
    replace 'shell_exec,' '' /usr/local/etc/php/7.1/php.ini
    replace 'passthru,' '' /usr/local/etc/php/7.1/php.ini
    replace 'stream_select,' '' /usr/local/etc/php/7.1/php.ini
}

function __7 {
    updateDevaScript
    replace 'allow_url_fopen = Off' 'allow_url_fopen = On' "$path_php/php.ini"
}

function __8 {
    sudo mkdir -p /usr/local/DevA/scripts
    get "deva/deva" "/usr/local/DevA/deva"
    get "deva/scripts/backup" "/usr/local/DevA/scripts/backup"
    get "deva/scripts/changelog" "/usr/local/DevA/scripts/changelog"
    get "deva/scripts/doctor" "/usr/local/DevA/scripts/doctor"
    get "deva/scripts/hosts" "/usr/local/DevA/scripts/hosts"
    get "deva/scripts/hosts_add" "/usr/local/DevA/scripts/hosts_add"
    get "deva/scripts/hosts_default" "/usr/local/DevA/scripts/hosts_default"
    get "deva/scripts/hosts_edit" "/usr/local/DevA/scripts/hosts_edit"
    get "deva/scripts/hosts_remove" "/usr/local/DevA/scripts/hosts_remove"
    get "deva/scripts/permissions" "/usr/local/DevA/scripts/permissions"
    get "deva/scripts/phpinfo" "/usr/local/DevA/scripts/phpinfo"
    get "deva/scripts/restore" "/usr/local/DevA/scripts/restore"
    get "deva/scripts/services" "/usr/local/DevA/scripts/services"
    get "deva/scripts/updates" "/usr/local/DevA/scripts/updates"
    sudo mkdir -p /usr/local/etc/nginx/deva/vhosts
    sudo mv /usr/local/etc/nginx/deva_www /usr/local/etc/nginx/deva/deva_www
    sudo rm -rf /usr/local/etc/nginx/deva*
    sudo mv /usr/local/etc/nginx/servers/* /usr/local/etc/nginx/deva/vhosts/*
    sudo rm -rf /usr/local/etc/nginx/servers
    get "conf/nginx/deva.conf" "/usr/local/etc/nginx/deva/deva.conf"
    get "conf/nginx/deva.tpl" "/usr/local/etc/nginx/deva/deva.tpl"
    get "conf/nginx/deva_404.html" "/usr/local/etc/nginx/deva/deva_404.html"
    get "conf/nginx/deva_common.conf" "/usr/local/etc/nginx/deva/deva_common.conf"
    get "conf/nginx/deva_html.conf" "/usr/local/etc/nginx/deva/deva_html.conf"
    get "conf/nginx/deva_phalcon.conf" "/usr/local/etc/nginx/deva/deva_phalcon.conf"
    get "conf/nginx/deva_php.conf" "/usr/local/etc/nginx/deva/deva_php.conf"
    replace "USER_PLACEHOLDER" "$(whoami)" /usr/local/etc/nginx/deva/deva.conf
    replace "GROUP_PLACEHOLDER" "admin" /usr/local/etc/nginx/deva/deva.conf
    replace "WWWDIR_PLACEHOLDER" "$(cat /usr/local/etc/nginx/deva/deva_www)" /usr/local/etc/nginx/deva/vhosts/___localhost.conf
    replace "PATH_NGINX" "/usr/local/etc/nginx" /usr/local/etc/nginx/deva/deva_common.conf
    echo "include deva/deva.conf;" | tee /usr/local/etc/nginx/nginx.conf
    sudo chmod -R +x /usr/local/DevA
    for f in /usr/local/etc/nginx/deva/vhosts/*.conf
    do
        rep 'include deva_' 'include deva/deva_' "$f"
    done
    mysqldump -uroot --all-databases > ~/deva_update_mysql_temp.sql
    brew services stop mariadb
    brew uninstall mariadb
    brew install mysql
    brew services start mysql
    mysql -uroot < ~/deva_update_mysql_temp.sql
    rm ~/deva_update_mysql_temp.sql
}

function __9 {
    get "deva/deva" "/usr/local/DevA/deva"
    get "deva/scripts/backup" "/usr/local/DevA/scripts/backup"
    get "deva/scripts/changelog" "/usr/local/DevA/scripts/changelog"
    get "deva/scripts/doctor" "/usr/local/DevA/scripts/doctor"
    get "deva/scripts/hosts" "/usr/local/DevA/scripts/hosts"
    get "deva/scripts/hosts_add" "/usr/local/DevA/scripts/hosts_add"
    get "deva/scripts/hosts_default" "/usr/local/DevA/scripts/hosts_default"
    get "deva/scripts/hosts_edit" "/usr/local/DevA/scripts/hosts_edit"
    get "deva/scripts/hosts_remove" "/usr/local/DevA/scripts/hosts_remove"
    get "deva/scripts/permissions" "/usr/local/DevA/scripts/permissions"
    get "deva/scripts/phpinfo" "/usr/local/DevA/scripts/phpinfo"
    get "deva/scripts/restore" "/usr/local/DevA/scripts/restore"
    get "deva/scripts/services" "/usr/local/DevA/scripts/services"
    get "deva/scripts/updates" "/usr/local/DevA/scripts/updates"
}

function __10 {
    get "deva/deva" "/usr/local/DevA/deva"
    if [ $os == "macos" ]; then
        brew unlink php71
        brew services stop php71
        brew remove php71-gmp php71-opcache php71-phalcon php71-pspell php71-redis php71-tidy php71-xdebug php71-memcached php71-mcrypt php71-imagick php71-igbinary
        brew remove php71
        rm -rf /usr/local/etc/php/7.1
        brew install \
            php72 \
            php72-gmp \
            php72-opcache \
            php72-phalcon \
            php72-pspell \
            php72-redis \
            php72-tidy \
            php72-xdebug
        echo "include=$path_php/deva_php-fpm.conf" | tee "$path_php/php-fpm.conf"
        get "conf/php/fpm-macos.conf" "$path_php/deva_php-fpm.conf"
        replace ';cgi.fix_pathinfo=1' 'cgi.fix_pathinfo=0' $path_php/php.ini
        replace ';opcache.enable=1' 'opcache.enable=0' $path_php/php.ini
        replace 'allow_url_fopen = On' 'allow_url_fopen = Off' $path_php/php.ini
        replace 'display_errors = Off' 'display_errors = On' $path_php/php.ini
        replace 'display_startup_errors = Off' 'display_startup_errors = On' $path_php/php.ini
        replace 'log_errors = On' 'log_errors = Off' $path_php/php.ini
        replace ';date.timezone =' 'date.timezone = "Atlantic\/Azores"' $path_php/php.ini
        replace 'error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT' 'error_reporting = E_ALL' $path_php/php.ini
        replace 'upload_max_filesize = 2M' 'upload_max_filesize = 1G' $path_php/php.ini
        replace 'post_max_size = 8M' 'post_max_size = 1G' $path_php/php.ini
        replace ';session.save_path = "/tmp"' 'session.save_path = "/usr/local/var/tmp"' $path_php/php.ini
        replace 'disable_functions =' 'disable_functions = exec,pcntl_exec,system,proc_nice,popen,pclose,curl_multi_exec,parse_ini_file,ini_get_all,ini_restore,show_source,eval,assert,dl,apache_note,apache_setenv,closelog,debugger_off,debugger_on,define_syslog_variables,openlog,syslog,url_exec,inject_code,phpAds_remoteInfo,phpAds_XmlRpc,phpAds_xmlrpcDecode,phpAds_xmlrpcEncode,posix_kill,posix_mkfifo,posix_setpgid,posix_setsid,posix_setuid,posix_uname,xmlrpc_entity_decode,pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_getpriority,pcntl_setpriority,opcache_get_status' $path_php/php.ini
        echo -e "\\n; Xdebug configuration for DevA\\nxdebug.var_display_max_depth = -1\\nxdebug.var_display_max_children = -1\\nxdebug.var_display_max_data = -1" | tee -a $path_php/php.ini
        profile "/usr/local/opt/php71/bin" "export PATH=\"/usr/local/opt/php71/bin:\$PATH\""
        replace 'php71' 'php72' ~/.bash_profile
        brew services restart php72
        brew cleanup
    else
        sudo service php7.1-fpm stop
        sudo apt-get purge php7.1.*
        rm -rf /etc/php/7.1
        sudo apt-get install -y \
            php7.2 \
            php7.2-bcmath \
            php7.2-bz2 \
            php7.2-cgi \
            php7.2-cli \
            php7.2-curl \
            php7.2-dev \
            php7.2-dba \
            php7.2-enchant \
            php7.2-fpm \
            php7.2-gd \
            php7.2-gmp \
            php7.2-imap \
            php7.2-intl \
            php7.2-json \
            php7.2-mbstring \
            php7.2-mysql \
            php7.2-opcache \
            php7.2-phalcon \
            php7.2-pspell \
            php7.2-readline \
            php7.2-sqlite3 \
            php7.2-tidy \
            php7.2-xml \
            php7.2-xmlrpc \
            php7.2-zip \
            php-imagick \
            php-xdebug
        echo "include=$path_php/deva_php-fpm.conf" | sudo tee "$path_php/php-fpm.conf"
        get "conf/php/fpm-linux.conf" "$path_php/deva_php-fpm.conf" --sudo
        replace ';cgi.fix_pathinfo=1' 'cgi.fix_pathinfo=0' $path_php/php.ini
        replace ';opcache.enable=0' 'opcache.enable=0' $path_php/php.ini
        replace ';opcache.enable=1' 'opcache.enable=0' $path_php/php.ini
        replace 'allow_url_fopen = On' 'allow_url_fopen = Off' $path_php/php.ini
        replace 'display_errors = Off' 'display_errors = On' $path_php/php.ini
        replace 'display_startup_errors = Off' 'display_startup_errors = On' $path_php/php.ini
        replace 'log_errors = On' 'log_errors = Off' $path_php/php.ini
        replace ';date.timezone =' 'date.timezone = "Atlantic\/Azores"' $path_php/php.ini
        replace 'error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT' 'error_reporting = E_ALL' $path_php/php.ini
        replace 'upload_max_filesize = 2M' 'upload_max_filesize = 1G' $path_php/php.ini
        replace 'post_max_size = 8M' 'post_max_size = 1G' $path_php/php.ini
        replace ';session.save_path = "/tmp"' 'session.save_path = "/usr/local/var/tmp"' $path_php/php.ini
        replace 'disable_functions =' 'disable_functions = exec,pcntl_exec,system,proc_nice,popen,pclose,curl_multi_exec,parse_ini_file,ini_get_all,ini_restore,show_source,eval,assert,dl,apache_note,apache_setenv,closelog,debugger_off,debugger_on,define_syslog_variables,openlog,syslog,url_exec,inject_code,phpAds_remoteInfo,phpAds_XmlRpc,phpAds_xmlrpcDecode,phpAds_xmlrpcEncode,posix_kill,posix_mkfifo,posix_setpgid,posix_setsid,posix_setuid,posix_uname,xmlrpc_entity_decode,pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_getpriority,pcntl_setpriority,opcache_get_status' $path_php/php.ini
        echo -e "\\n; Xdebug configuration for DevA\\nxdebug.var_display_max_depth = -1\\nxdebug.var_display_max_children = -1\\nxdebug.var_display_max_data = -1" | sudo tee -a $path_php/php.ini
        sudo service php7.2-fpm restart
        sudo apt-get clean
        sudo apt-get -y autoremove
    fi
}

function __11 {
    get "deva/deva" "/usr/local/DevA/deva"
    if [ $os == "macos" ]; then
        sed -i '' 's/disable_functions = .*/disable_functions = apache_child_terminate,apache_get_modules,apache_note,apache_setenv,dl,define_syslog_variables,eval,ftp_connect,ini_get_all,passthru,phpAds_remoteInfo,phpAds_XmlRpc,phpAds_xmlrpcDecode,phpAds_xmlrpcEncode,popen,proc_open,proc_close,xmlrpc_entity_decode,curl_multi_exec,parse_ini_file,show_source,pcntl_exec,php_uname/g' $path_php/php.ini
        brew uninstall --ignore-dependencies php72
        brew install php72 --with-argon2
        brew install php72-imagick
        brew services restart php72
    else
        sed -i 's/disable_functions = .*/disable_functions = apache_child_terminate,apache_get_modules,apache_note,apache_setenv,dl,define_syslog_variables,eval,ftp_connect,ini_get_all,passthru,phpAds_remoteInfo,phpAds_XmlRpc,phpAds_xmlrpcDecode,phpAds_xmlrpcEncode,popen,proc_open,proc_close,xmlrpc_entity_decode,curl_multi_exec,parse_ini_file,show_source,pcntl_exec,php_unam/g' $path_php/php.ini
        sudo service php7.2-fpm restart
    fi
}

function __12 {
    get "deva/deva" "/usr/local/DevA/deva"
    get "deva/scripts/hosts_add" "/usr/local/DevA/scripts/hosts_add"
    get "deva/scripts/hosts_edit" "/usr/local/DevA/scripts/hosts_edit"
    if [ $os == "macos" ]; then
        path_nginx=/usr/local/etc/nginx
    else
        path_nginx=/etc/nginx
    fi
    for f in $path_nginx/deva/vhosts/*.dev.conf
    do
        host="$(basename "$f" .dev.conf)"
        replace "server_name $host.dev;" "server_name $host.localhost;" "$f"
        sudo mv "$f" "$path_nginx/deva/vhosts/$host.localhost.conf"
    done
    replace ".dev" ".localhost" "$f"
    if [ $os == "macos" ]; then
        sudo brew services restart nginx
    else
        sudo service nginx restart
    fi
}

# ------------------------------------------------------------------------------

# Run Updater

lv=$(get "update.txt")
cv=$(currentVersion)

if [ "$cv" -eq "$lv" ]; then
    green "You already have the latest version!"
    rm -f "$0"
    exit 0
fi

clear
echo -e "This will update DevA from Update $cv to Update $lv.\\n\\nPress ENTER to continue ..."
read -r

for ((i=cv+1; i < lv + 1; i++))
do
    echo "Running Update $i ..."
    __${i}
    perms
done

clear
green "Update complete!"

rm -f "$0"

exit 0
